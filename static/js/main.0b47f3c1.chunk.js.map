{"version":3,"sources":["components/Header/Header.jsx","Api/api.js","components/FindLocation/FindLocation.jsx","components/Modal/Modal.jsx","components/ItemLocation/ItemLocation.jsx","components/ListLocation/ListLocation.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","fetchWeather","query","fetch","then","res","json","addLocation","result","callback","setQuery","id","name","temp","main","feels","feels_like","wind","speed","humidity","pressure","tempMax","temp_max","tempMin","temp_min","country","sys","sunrise","sunset","description","weather","icon","title","FindLocation","onAddNewLocation","useState","buttonDisabled","setButtonDisabled","err","setErr","prevQuery","usePrevious","useEffect","search","e","preventDefault","catch","error","console","log","onSubmit","value","onChange","target","type","placeholder","disabled","onClick","Modal","setModalActive","children","ItemLocation","handleDeleteElement","card","modalActive","getDay","timestamp","day","Date","String","getHours","src","alt","toJSON","slice","replace","toFixed","ListLocation","cards","refresh","map","idx","toString","App","setCards","saveCards","localStorage","getItem","JSON","parse","setItem","stringify","newLocation","itemIndex","findIndex","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b47f3c1.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport const Header = () => (\n  <header>\n    <h1 className=\"header__title\">\n      Weather?\n    </h1>\n  </header>\n);\n","/* eslint-disable arrow-body-style */\nconst API_BASE = 'https://api.openweathermap.org/data/2.5/';\nconst apikey = 'be2e56e9809ab02e33a32ab7bba23488';\n\nexport const fetchWeather = (query) => {\n  return fetch(`${API_BASE}weather?q=${query}&units=metric&APPID=${apikey}`)\n    .then(res => res.json());\n};\n\nexport const addLocation = (result, callback, setQuery) => {\n  const newLocation = {\n    id: result.id,\n    name: result.name,\n    temp: result.main.temp,\n    feels: result.main.feels_like,\n    wind: result.wind.speed,\n    humidity: result.main.humidity,\n    pressure: result.main.pressure,\n    tempMax: result.main.temp_max,\n    tempMin: result.main.temp_min,\n    country: result.sys.country,\n    sunrise: result.sys.sunrise,\n    sunset: result.sys.sunset,\n    description: result.weather[0].description,\n    icon: result.weather[0].icon,\n    title: result.weather[0].main,\n  };\n\n  callback(newLocation);\n  if (setQuery) {\n    setQuery('');\n  }\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-hanger';\nimport { fetchWeather, addLocation } from '../../Api/api';\nimport './FindLocation.scss';\n\nexport const FindLocation = ({ onAddNewLocation }) => {\n  const [query, setQuery] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [err, setErr] = useState(false);\n  const prevQuery = usePrevious(query);\n\n  useEffect(() => {\n    if (!query) {\n      setButtonDisabled(true);\n    } else {\n      setButtonDisabled(false);\n    }\n\n    if (query !== prevQuery) {\n      setErr(false);\n    }\n  }, [query]);\n\n  const search = (e) => {\n    e.preventDefault();\n    if (!query) {\n      return;\n    }\n\n    fetchWeather(query)\n      .then(res => addLocation(res, onAddNewLocation, setQuery))\n      .catch((error) => {\n        console.log(error);\n        setErr(true);\n      });\n  };\n\n  return (\n    <section className=\"search__box\">\n      <form className=\"wrapper is-flex is-relative\" onSubmit={search}>\n        <input\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n          className={`input mr-4 ${err ? 'is-danger' : 'is-primary'}`}\n          type=\"text\"\n          name=\"input\"\n          placeholder=\"Type your city\"\n        />\n        {err ? (\n          <p className=\"help is-danger is-absolute\">\n            Can&apos;t find a city\n          </p>\n        ) : ''}\n        <button\n          disabled={buttonDisabled}\n          onClick={search}\n          type=\"button\"\n          className=\"button is-primary is-outlined\"\n        >\n          Add\n        </button>\n      </form>\n    </section>\n  );\n};\n","/* eslint-disable */\nimport React from 'react';\nimport './Modal.scss';\n\nexport const Modal = ({ setModalActive, children }) => (\n  <div\n    className=\"modalw\"\n    onClick={() => {\n      setModalActive(false);\n    }}\n  >\n    <div className=\"modal__content\">\n      {children}\n      <div className=\"has-text-centered mt-2\">\n        <button\n          onClick={() => {\n            setModalActive(false);\n          }}\n          type=\"button\"\n          className=\"button is-success is-small\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n);\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { addLocation, fetchWeather } from '../../Api/api';\nimport './ItemLocation.scss';\nimport { Modal } from '../Modal/Modal';\n\nexport const ItemLocation = ({\n  onAddNewLocation,\n  handleDeleteElement,\n  id,\n  name,\n  card,\n}) => {\n  const [modalActive, setModalActive] = useState(false);\n\n  const getDay = (timestamp) => {\n    const day = new Date(timestamp * 1000);\n    const hours = String(day.getHours());\n\n    return hours;\n  };\n\n  const updateData = () => {\n    fetchWeather(name)\n      .then(res => addLocation({ ...res }, onAddNewLocation))\n      .catch(err => err);\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card__image-container\">\n          <img\n            className=\"is-scale\"\n            src={`https://openweathermap.org/img/wn/${card.icon}@2x.png`}\n            alt=\"weather\"\n          />\n        </div>\n        <div className=\"card__content\">\n          <p className=\"card__title\">{card.name}</p>\n          <p className=\"card__info\">\n            Date:\n            <span>{new Date().toJSON().slice(0, 10).replace(/-/g, '/')}</span>\n          </p>\n          <p className=\"card__info\">\n            Temperature:\n            <span>{card.temp.toFixed(0)}</span>\n          </p>\n          <p className=\"card__info\">\n            Feels like:\n            <span>{card.feels.toFixed(0)}</span>\n          </p>\n          <p className=\"card__info\">\n            Wind:\n            <span>{card.wind}</span>\n          </p>\n          <div className=\"has-text-center mt-4\">\n            <button\n              onClick={() => {\n                setModalActive(true);\n              }}\n              className=\"is-rounded button is-link is-inverted is-small\"\n              type=\"button\"\n            >\n              Details\n            </button>\n            <button\n              onClick={updateData}\n              className=\"is-rounded button is-success is-inverted is-small\"\n              type=\"button\"\n            >\n              Update\n            </button>\n            <button\n              onClick={() => {\n                handleDeleteElement(id);\n              }}\n              className=\"is-rounded is-danger is-inverted button is-small\"\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {modalActive && (\n        <Modal\n          modalActive={modalActive}\n          setModalActive={setModalActive}\n          card={card}\n        >\n          <div className=\"intro\">\n            <div className=\"intro__content\">\n              <p className=\"intro__timezone\">{name}</p>\n              <hr />\n              <p className=\"intro__title\">\n                Temperature\n                <span>{card.temp}</span>\n              </p>\n              <p className=\"intro__title\">\n                Feels like\n                <span>{card.feels}</span>\n              </p>\n              <p className=\"intro__title\">\n                Min temperature\n                <span>{card.tempMin}</span>\n              </p>\n              <p className=\"intro__title\">\n                Max temperature\n                <span>{card.tempMax}</span>\n              </p>\n              <p className=\"intro__title\">\n                Humidity\n                <span>{card.humidity}</span>\n              </p>\n              <p className=\"intro__title\">\n                Pressure\n                <span>{card.pressure}</span>\n              </p>\n              <p className=\"intro__title\">\n                Sunrise\n                <span>\n                  {getDay(card.sunrise)}\n                  {' '}\n                  a.m.\n                </span>\n              </p>\n              <p className=\"intro__title\">\n                Sunset\n                <span>\n                  {getDay(card.sunset)}\n                  {' '}\n                  p.m.\n                </span>\n              </p>\n              <p className=\"intro__title\">\n                Country\n                <span>{card.country}</span>\n              </p>\n              <p className=\"intro__title\">\n                Timezone id\n                <span>{card.id}</span>\n              </p>\n\n            </div>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React from 'react';\nimport './ListLocation.scss';\nimport { ItemLocation } from '../ItemLocation/ItemLocation';\n\nexport const ListLocation = ({\n  cards,\n  refresh,\n  handleDeleteElement,\n  onAddNewLocation,\n}) => (\n  <section className=\"cards__list\">\n    <article className=\"cards__list--items\">\n      {cards && cards.map((card, idx) => (\n        <ItemLocation\n          key={idx.toString()}\n          card={card}\n          refresh={refresh}\n          handleDeleteElement={handleDeleteElement}\n          onAddNewLocation={onAddNewLocation}\n          {...card}\n        />\n      ))}\n    </article>\n  </section>\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\nimport { FindLocation } from './components/FindLocation/FindLocation';\nimport { ListLocation } from './components/ListLocation/ListLocation';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    const saveCards = localStorage.getItem('cards');\n\n    if (saveCards) {\n      setCards(JSON.parse(saveCards));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('cards', JSON.stringify(cards));\n  }, [cards]);\n\n  const addLocation = (newLocation) => {\n    const itemIndex = cards.findIndex(card => card.id === newLocation.id);\n\n    if (itemIndex > -1) {\n      const temp = [...cards];\n\n      temp[itemIndex] = {\n        ...temp[itemIndex],\n        ...newLocation,\n      };\n      setCards(temp);\n    } else {\n      setCards([newLocation, ...cards]);\n    }\n  };\n\n  const handleDeleteElement = (id) => {\n    setCards(cards.filter(card => card.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <FindLocation\n        cards={cards}\n        onAddNewLocation={addLocation}\n      />\n      <ListLocation\n        onAddNewLocation={addLocation}\n        cards={cards}\n        handleDeleteElement={handleDeleteElement}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable*/\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n         <App/>\n     </BrowserRouter>\n </React.StrictMode>,\n document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}